// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.3
// 	protoc        v5.29.3
// source: iot.proto

package __

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RecordTemperatureRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SensorId      string                 `protobuf:"bytes,1,opt,name=sensor_id,json=sensorId,proto3" json:"sensor_id,omitempty"`
	Temperature   float64                `protobuf:"fixed64,2,opt,name=temperature,proto3" json:"temperature,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RecordTemperatureRequest) Reset() {
	*x = RecordTemperatureRequest{}
	mi := &file_iot_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RecordTemperatureRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecordTemperatureRequest) ProtoMessage() {}

func (x *RecordTemperatureRequest) ProtoReflect() protoreflect.Message {
	mi := &file_iot_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecordTemperatureRequest.ProtoReflect.Descriptor instead.
func (*RecordTemperatureRequest) Descriptor() ([]byte, []int) {
	return file_iot_proto_rawDescGZIP(), []int{0}
}

func (x *RecordTemperatureRequest) GetSensorId() string {
	if x != nil {
		return x.SensorId
	}
	return ""
}

func (x *RecordTemperatureRequest) GetTemperature() float64 {
	if x != nil {
		return x.Temperature
	}
	return 0
}

type RecordTemperatureResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RecordTemperatureResponse) Reset() {
	*x = RecordTemperatureResponse{}
	mi := &file_iot_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RecordTemperatureResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecordTemperatureResponse) ProtoMessage() {}

func (x *RecordTemperatureResponse) ProtoReflect() protoreflect.Message {
	mi := &file_iot_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecordTemperatureResponse.ProtoReflect.Descriptor instead.
func (*RecordTemperatureResponse) Descriptor() ([]byte, []int) {
	return file_iot_proto_rawDescGZIP(), []int{1}
}

func (x *RecordTemperatureResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type GetTemperatureRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SensorId      string                 `protobuf:"bytes,1,opt,name=sensor_id,json=sensorId,proto3" json:"sensor_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTemperatureRequest) Reset() {
	*x = GetTemperatureRequest{}
	mi := &file_iot_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTemperatureRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTemperatureRequest) ProtoMessage() {}

func (x *GetTemperatureRequest) ProtoReflect() protoreflect.Message {
	mi := &file_iot_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTemperatureRequest.ProtoReflect.Descriptor instead.
func (*GetTemperatureRequest) Descriptor() ([]byte, []int) {
	return file_iot_proto_rawDescGZIP(), []int{2}
}

func (x *GetTemperatureRequest) GetSensorId() string {
	if x != nil {
		return x.SensorId
	}
	return ""
}

type GetTemperatureResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Temperature   float64                `protobuf:"fixed64,1,opt,name=temperature,proto3" json:"temperature,omitempty"`
	Found         bool                   `protobuf:"varint,2,opt,name=found,proto3" json:"found,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTemperatureResponse) Reset() {
	*x = GetTemperatureResponse{}
	mi := &file_iot_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTemperatureResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTemperatureResponse) ProtoMessage() {}

func (x *GetTemperatureResponse) ProtoReflect() protoreflect.Message {
	mi := &file_iot_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTemperatureResponse.ProtoReflect.Descriptor instead.
func (*GetTemperatureResponse) Descriptor() ([]byte, []int) {
	return file_iot_proto_rawDescGZIP(), []int{3}
}

func (x *GetTemperatureResponse) GetTemperature() float64 {
	if x != nil {
		return x.Temperature
	}
	return 0
}

func (x *GetTemperatureResponse) GetFound() bool {
	if x != nil {
		return x.Found
	}
	return false
}

type GetAllTemperaturesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAllTemperaturesRequest) Reset() {
	*x = GetAllTemperaturesRequest{}
	mi := &file_iot_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAllTemperaturesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllTemperaturesRequest) ProtoMessage() {}

func (x *GetAllTemperaturesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_iot_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllTemperaturesRequest.ProtoReflect.Descriptor instead.
func (*GetAllTemperaturesRequest) Descriptor() ([]byte, []int) {
	return file_iot_proto_rawDescGZIP(), []int{4}
}

type GetAllTemperaturesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Sensors       []*SensorTemperature   `protobuf:"bytes,1,rep,name=sensors,proto3" json:"sensors,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAllTemperaturesResponse) Reset() {
	*x = GetAllTemperaturesResponse{}
	mi := &file_iot_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAllTemperaturesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllTemperaturesResponse) ProtoMessage() {}

func (x *GetAllTemperaturesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_iot_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllTemperaturesResponse.ProtoReflect.Descriptor instead.
func (*GetAllTemperaturesResponse) Descriptor() ([]byte, []int) {
	return file_iot_proto_rawDescGZIP(), []int{5}
}

func (x *GetAllTemperaturesResponse) GetSensors() []*SensorTemperature {
	if x != nil {
		return x.Sensors
	}
	return nil
}

type SensorTemperature struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SensorId      string                 `protobuf:"bytes,1,opt,name=sensor_id,json=sensorId,proto3" json:"sensor_id,omitempty"`
	Temperature   float64                `protobuf:"fixed64,2,opt,name=temperature,proto3" json:"temperature,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SensorTemperature) Reset() {
	*x = SensorTemperature{}
	mi := &file_iot_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SensorTemperature) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SensorTemperature) ProtoMessage() {}

func (x *SensorTemperature) ProtoReflect() protoreflect.Message {
	mi := &file_iot_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SensorTemperature.ProtoReflect.Descriptor instead.
func (*SensorTemperature) Descriptor() ([]byte, []int) {
	return file_iot_proto_rawDescGZIP(), []int{6}
}

func (x *SensorTemperature) GetSensorId() string {
	if x != nil {
		return x.SensorId
	}
	return ""
}

func (x *SensorTemperature) GetTemperature() float64 {
	if x != nil {
		return x.Temperature
	}
	return 0
}

var File_iot_proto protoreflect.FileDescriptor

var file_iot_proto_rawDesc = []byte{
	0x0a, 0x09, 0x69, 0x6f, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03, 0x69, 0x6f, 0x74,
	0x22, 0x59, 0x0a, 0x18, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x54, 0x65, 0x6d, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09,
	0x73, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x73, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x65, 0x6d,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b,
	0x74, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x22, 0x35, 0x0a, 0x19, 0x52,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x54, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x22, 0x34, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x73,
	0x65, 0x6e, 0x73, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x73, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x49, 0x64, 0x22, 0x50, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x54,
	0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x74, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x05, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x22, 0x1b, 0x0a, 0x19, 0x47, 0x65,
	0x74, 0x41, 0x6c, 0x6c, 0x54, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x4e, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x41, 0x6c,
	0x6c, 0x54, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x07, 0x73, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x69, 0x6f, 0x74, 0x2e, 0x53, 0x65, 0x6e,
	0x73, 0x6f, 0x72, 0x54, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x07,
	0x73, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x73, 0x22, 0x52, 0x0a, 0x11, 0x53, 0x65, 0x6e, 0x73, 0x6f,
	0x72, 0x54, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x1b, 0x0a, 0x09,
	0x73, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x73, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x65, 0x6d,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b,
	0x74, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x32, 0x8a, 0x02, 0x0a, 0x12,
	0x54, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x52, 0x0a, 0x11, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x54, 0x65, 0x6d, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x1d, 0x2e, 0x69, 0x6f, 0x74, 0x2e, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x54, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x69, 0x6f, 0x74, 0x2e, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x54, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x54, 0x65, 0x6d,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x1a, 0x2e, 0x69, 0x6f, 0x74, 0x2e, 0x47,
	0x65, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x69, 0x6f, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x65,
	0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x55, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x54, 0x65, 0x6d, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x12, 0x1e, 0x2e, 0x69, 0x6f, 0x74, 0x2e, 0x47, 0x65,
	0x74, 0x41, 0x6c, 0x6c, 0x54, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x69, 0x6f, 0x74, 0x2e, 0x47, 0x65,
	0x74, 0x41, 0x6c, 0x6c, 0x54, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x04, 0x5a, 0x02, 0x2e, 0x2f, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_iot_proto_rawDescOnce sync.Once
	file_iot_proto_rawDescData = file_iot_proto_rawDesc
)

func file_iot_proto_rawDescGZIP() []byte {
	file_iot_proto_rawDescOnce.Do(func() {
		file_iot_proto_rawDescData = protoimpl.X.CompressGZIP(file_iot_proto_rawDescData)
	})
	return file_iot_proto_rawDescData
}

var file_iot_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_iot_proto_goTypes = []any{
	(*RecordTemperatureRequest)(nil),   // 0: iot.RecordTemperatureRequest
	(*RecordTemperatureResponse)(nil),  // 1: iot.RecordTemperatureResponse
	(*GetTemperatureRequest)(nil),      // 2: iot.GetTemperatureRequest
	(*GetTemperatureResponse)(nil),     // 3: iot.GetTemperatureResponse
	(*GetAllTemperaturesRequest)(nil),  // 4: iot.GetAllTemperaturesRequest
	(*GetAllTemperaturesResponse)(nil), // 5: iot.GetAllTemperaturesResponse
	(*SensorTemperature)(nil),          // 6: iot.SensorTemperature
}
var file_iot_proto_depIdxs = []int32{
	6, // 0: iot.GetAllTemperaturesResponse.sensors:type_name -> iot.SensorTemperature
	0, // 1: iot.TemperatureService.RecordTemperature:input_type -> iot.RecordTemperatureRequest
	2, // 2: iot.TemperatureService.GetTemperature:input_type -> iot.GetTemperatureRequest
	4, // 3: iot.TemperatureService.GetAllTemperatures:input_type -> iot.GetAllTemperaturesRequest
	1, // 4: iot.TemperatureService.RecordTemperature:output_type -> iot.RecordTemperatureResponse
	3, // 5: iot.TemperatureService.GetTemperature:output_type -> iot.GetTemperatureResponse
	5, // 6: iot.TemperatureService.GetAllTemperatures:output_type -> iot.GetAllTemperaturesResponse
	4, // [4:7] is the sub-list for method output_type
	1, // [1:4] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_iot_proto_init() }
func file_iot_proto_init() {
	if File_iot_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_iot_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_iot_proto_goTypes,
		DependencyIndexes: file_iot_proto_depIdxs,
		MessageInfos:      file_iot_proto_msgTypes,
	}.Build()
	File_iot_proto = out.File
	file_iot_proto_rawDesc = nil
	file_iot_proto_goTypes = nil
	file_iot_proto_depIdxs = nil
}
